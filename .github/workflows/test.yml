name: Test

on:
  pull_request:
    types:
      - "opened"
      - "synchronize"
  push:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest
    name: "py${{ matrix.python-version }}; pydantic-${{ matrix.pydantic_v2 == 'true' && 'v2' || 'v1' }}; fastapi${{ matrix.fastapi_pre_0_112_4 == 'true' && '<0.12.4' || '>=0.12.4' }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
        pydantic_v2: [ "true", "false" ]
        fastapi_version: [ "latest" ]

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run tests
        shell: bash
        env:
          PY_VERSION: ${{ matrix.python-version }}
          PYDANTIC_V2: ${{ matrix.pydantic_v2 }}
          FASTAPI_VERSION: ${{ matrix.fastapi_version }}
        run: |
          if [[ "$PYDANTIC_V2" == "false" ]]; then
            uv run pip install "pydantic<2.0.0"
          fi
          
          if [[ "$FASTAPI_VERSION" != "latest" ]]; then
            uv run pip install "fastapi==$FASTAPI_VERSION"
          fi
          
          uv run --no-project pytest tests
